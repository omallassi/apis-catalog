name: Rust

on: [push]

env: 
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{github.repository}}

jobs:
  build: 
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
    steps:
      - uses: actions/checkout@v2
      - name: clean
        run: cargo clean
      - name: Build
        run: cargo build --verbose  
        env:
          RUST_BACKTRACE: 1
      - name: Run tests
        run: cargo test --verbose
        env:
          RUST_BACKTRACE: 1

  publish_metrics:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Generate and publish code coverage
      #This is a crappy work around. Got issues as tarpaulin seems to be running `cargo test -- --test-threads 1
      # which seems to not work w/ the used version of cucumber-rust. 
      #Changhing harness = true work around the pb...
      #Also seems like cucumber tests are part of coverage measures (which is nice)
        run: |
          cargo install cargo-tarpaulin
          cargo tarpaulin --release --out Lcov --coveralls "${{secrets.COVERALLS_TOKEN}}"

  build_and_publish_image:
    needs: build
    runs-on: ubuntu-latest

    steps: 
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v1.14.1
        with: 
          registry: ${{env.REGISTRY}}
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3.6.2
        with: 
          images: ${{env.REGISTRY}}/${{env.IMAGE_NAME}}

      - name: build and push Docker image
        uses: docker/build-push-action@v2.10.0
        with: 
          context: ./server/
          push: true
          tags: ${{steps.meta.outputs.tags}}
          labels: ${{steps.meta.outputs.labels}} 
